<?xml version="1.0"?>
<!--
 Copyright (C) 2017 Red Hat, Inc.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library. If not, see <http://www.gnu.org/licenses/>.

 Author: Matthias Clasen <mclasen@redhat.com>
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
      org.freedesktop.impl.portal.Email:
      @short_description: Email portal backend interface

      This Email portal lets sandboxed applications request sending an email.
  -->
  <interface name="org.freedesktop.impl.portal.Email">
    <!--
        ComposeEmail:
        @handle: Object path for the :ref:`org.freedesktop.impl.portal.Request` object representing this call
        @app_id: App id of the application
        @parent_window: Identifier for the application window, see :ref:`Common Conventions <window-identifiers>`
        @options: Vardict with optional further information
        @response: Numeric response
        @results: Vardict with the results of the call

        Lets the user compose an email.

        Supported keys in the @options vardict include:

        * ``address`` (``s``)

          The email address to send to.

        * ``addresses`` (``as``)

          Email addresses to send to.

        * ``cc`` (``as``)

          Email addresses to cc.

        * ``bcc`` (``as``)

          Email addresses to bcc.

        * ``subject`` (``s``)

          The subject for the email.

        * ``body`` (``s``)

          The body for the email.

        * ``attachments`` (``as``)

          The uris for files to attach.

        * ``activation_token`` (``s``)

          A token that can be used to activate the chosen application.
    -->
    <method name="ComposeEmail">
      <arg type="o" name="handle" direction="in"/>
      <arg type="s" name="app_id" direction="in"/>
      <arg type="s" name="parent_window" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In3" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="u" name="response" direction="out"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out1" value="QVariantMap"/>
      <arg type="a{sv}" name="results" direction="out"/>
    </method>
  </interface>
</node>
