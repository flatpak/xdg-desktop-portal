<?xml version="1.0"?>
<!--
 Copyright (C) 2016 Red Hat, Inc.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library. If not, see <http://www.gnu.org/licenses/>.

 Author: Matthias Clasen <mclasen@redhat.com>
-->
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd" name="/">
  <!--
      org.freedesktop.impl.portal.AppChooser:
      @short_description: Interface for choosing an application

      This backend can be used by portal implementations that
      need to choose an application from a list of applications.
  -->
  <interface name="org.freedesktop.impl.portal.AppChooser">
    <!--
        ChooseApplication:
        @handle: Object path to export the Request object at
        @app_id: App id of the application
        @title: Title for the app chooser dialog
        @parent_window: Identifier for the application window, see <link linkend="parent_window">Common Conventions</link>
        @choices: App ids of applications to let the user choose from
        @options: Vardict with optional further information
        @response: Numeric response
        @results: Vardict with the results of the call

        Presents a list of applications to the user to choose one.

        Supported keys in the @options vardict include:
        <variablelist>
          <varlistentry>
            <term>last_choice s</term>
            <listitem><para>The app id that was selected the last time.</para></listitem>
          </varlistentry>
          <varlistentry>
            <term>modal b</term>
            <listitem><para>Whether to make the dialog modal. Defaults to yes.</para></listitem>
          </varlistentry>
          <varlistentry>
            <term>content_type s</term>
            <listitem><para>The content type to choose an application for.</para></listitem>
          </varlistentry>
          <varlistentry>
            <term>uri s</term>
            <listitem><para>The uri to choose an application for.</para></listitem>
          </varlistentry>
          <varlistentry>
            <term>filename s</term>
            <listitem><para>The filename to choose an application for. Note that this
               is just a basename, without a path.</para></listitem>
          </varlistentry>
          <varlistentry>
            <term>use_associated_app b</term>
            <listitem><para>
              Whether to automatically use default application associated with the mime type
              of the file we want to open.
            </para></listitem>
          </varlistentry>

        </variablelist>

        The following results get returned via the @results vardict:
        <variablelist>
          <varlistentry>
            <term>choice s</term>
            <listitem><para>The app id that was selected.</para></listitem>
          </varlistentry>
        </variablelist>
    -->
    <method name="ChooseApplication">
      <arg type="o" name="handle" direction="in"/>
      <arg type="s" name="app_id" direction="in"/>
      <arg type="s" name="parent_window" direction="in"/>
      <arg type="as" name="choices" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In4" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="u" name="response" direction="out"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.Out1" value="QVariantMap"/>
      <arg type="a{sv}" name="results" direction="out"/>
    </method>

    <!--
        UpdateChoices:
        @handle: the request handle
        @choices: App ids of applications to let the user choose from

        This method can be called between the time of a ChooseApplication call
        and receiving the Response signal, to update the list of applications
        that are offered by the backend.
    -->
    <method name="UpdateChoices">
      <arg type="o" name="handle" direction="in"/>
      <arg type="as" name="choices" direction="in"/>
    </method>
  </interface>
</node>
